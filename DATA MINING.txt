Data mining Using SQL
READ MORE ON SQL AND ANSWER THE BELOW QUESTIONS USING THIS DATABASE
https://www.w3schools.com/sql/trysql.asp?filename=trysql_select_all

1.Display a single relation with: OrderId, OrderDate, CustomerName, City, Address, 
PostalCode, ShipperName, ProductName, Quantity.

SELECT c.CustomerName, c.City, c.Address, c.PostalCode, o.OrderID,
p.ProductName, od.Quantity, s.ShipperName,o.OrderDate
FROM Customers AS c
JOIN Orders AS o ON o.CustomerID = c.CustomerID
JOIN OrderDetails AS od ON od.OrderID = o.OrderID
JOIN Shippers AS s ON s.ShipperID = o.ShipperID
JOIN Products AS P ON p.ProductID = od.ProductID;

2.Display all products ever been ordered and display the shipper name.


SELECT p.ProductName AS OrderedProdcuts, s.ShipperName
FROM OrderDetails AS od
JOIN Products AS p ON p.ProductID = od.ProductID
JOIN Orders AS o ON o.OrderID = od.OrderID
JOIN Shippers AS s ON s.ShipperID = o.ShipperID

3.Display the count of all products shipped by each of the 3 shippers.

SELECT  s.ShipperName, COUNT(p.ProductName) AS TotalOrders
FROM OrderDetails AS od
JOIN Products AS p ON p.ProductID = od.ProductID
JOIN Orders AS o ON o.OrderID = od.OrderID
JOIN Shippers AS s ON s.ShipperID = o.ShipperID
GROUP BY s.ShipperName;

4. How many customers DO NOT have the words ‘son’ in their CustomerName.

SELECT COUNT(CustomerName) AS Total FROM Customers
 WHERE CustomerName NOT LIKE '%son%'

5.Find the total sales made in the year 1997.

SELECT SUM(od.Quantity * p.Price) AS Total 
FROM Products AS p
JOIN OrderDetails AS od ON od.ProductID = p.ProductID
JOIN Orders AS o ON o.OrderID = od.OrderID
WHERE OrderDate LIKE "%1997%";

6.Display each customer_name and total_amount 
ever spent in the business, from highest amount.

SELECT c.CustomerName, ROUND(SUM(od.Quantity * p.Price), 2) AS Total_Amount
FROM Orders AS o 
JOIN Customers AS c ON o.CustomerID = c.CustomerID
JOIN OrderDetails AS od ON o.OrderID = od.OrderID
JOIN Products AS p ON od.ProductID = p.ProductID
GROUP BY C.CustomerName
ORDER BY Total_Amount DESC;

7.Find the top supplier of the business 
(in terms of products ordered).


SELECT s.SupplierName, SUM(od.Quantity) AS ProductsSupplied
FROM Products AS p
JOIN Suppliers AS s ON s.SupplierID = p.SupplierID
JOIN OrderDetails AS od ON od.ProductID = p.ProductID
GROUP BY s.SupplierName
ORDER BY ProductsSupplied DESC
LIMIT 1;


8.Find the total sales of each product.

SELECT p.ProductName, SUM(od.Quantity * p.Price) AS TotalSales
FROM Products AS p
JOIN OrderDetails AS od ON od.ProductID = p.ProductID
GROUP BY p.ProductName
ORDER BY TotalSales DESC;

9.Find the best performing month in the business in terms of sales. 
Hint: Use substr() on the date to slice


SELECT SUBSTR(OrderDate, 6, 2) AS SalesMonth, SUM(Quantity * Price) AS TotalSales
FROM Orders AS o
JOIN OrderDetails AS od ON o.OrderID = od.OrderID
JOIN Products AS p ON od.ProductID = p.ProductID
GROUP BY SalesMonth
ORDER BY TotalSales DESC;

10.Find the total sales per day.

10.Find the total sales per day

answer::
SELECT OrderDate,SUM(OD.Quantity * P.Price) AS TotalSales
FROM Orders O
JOIN OrderDetails OD ON O.OrderId = OD.OrderId
JOIN Products P ON OD.ProductId = P.ProductId
GROUP BY OrderDate;

11.Find the total Sales for each Customer, the ones who have never ordered leave as 0.

answer::
SELECT C.CustomerName,IFNULL(SUM(OD.Quantity * P.Price), 0) AS TotalSales
FROM Customers C
LEFT JOIN Orders O ON C.CustomerId = O.CustomerId
LEFT JOIN OrderDetails OD ON O.OrderId = OD.OrderId
LEFT JOIN Products P ON OD.ProductId = P.ProductId
GROUP BY C.CustomerName;

12.In the same database, create the table payments and determine the foreign key,
 any relevant columns and their respective data types. Insert at least 5 records.


answer::

 CREATE TABLE payments (
    PaymentID INT PRIMARY KEY,
    OrderID INT,
    PaymentDate DATE,
    Amount DECIMAL(10,2),
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID)
);

